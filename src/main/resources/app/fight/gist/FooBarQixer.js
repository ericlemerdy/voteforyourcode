if ( 'prettyPrint' in window ) {} else {
    document.write( '<script type="text/javascript" src="http://gist-it.appspot.com/assets/prettify/prettify.js"></script>' );
}


document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/embed.css"/>' );


document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/prettify/prettify.css"/>' );

document.write( '<div class="gist-it-gist">\n<div class="gist-file">\n    <div class="gist-data">\n        \n        <pre class="prettyprint">package fr.free.lemerdy;\n\nimport static java.lang.Math.abs;\n\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport java.util.regex.Pattern;\n\npublic class FooBarQixer {\n\n    private static final Map&lt;Integer, String&gt; ORDERED_SUBSTITTIONS = new LinkedHashMap&lt;Integer, String&gt;(3);\n    \n    private static final Pattern HAS_SPECIAL_NUMBERS = Pattern.compile(".*[357]+.*");\n\n    private final Integer fooBarQixNumber;\n\n    private Boolean shouldBeFooBarQixed = false;\n\n    static {\n        ORDERED_SUBSTITTIONS.put(3, "Foo");\n        ORDERED_SUBSTITTIONS.put(5, "Bar");\n        ORDERED_SUBSTITTIONS.put(7, "Qix");\n    }\n\n    public FooBarQixer(int i) {\n        fooBarQixNumber = i;\n    }\n\n    public static void main(String[] args) {\n        for (int i = 1; i &lt;= 100; i++) {\n            System.out.println(new FooBarQixer(i).toString());\n        }\n    }\n\n    @Override\n    public String toString() {\n        StringBuilder fooBarQixBuffer = new StringBuilder();\n\n        fooBarQixBuffer.append(substitutedWhenDivideSpecialNumbers());\n        fooBarQixBuffer.append(substitutedWhenSpecialNumbersOccurs());\n\n        if (!shouldBeFooBarQixed) {\n            return fooBarQixNumber.toString();\n        }\n        shouldBeFooBarQixed = false;\n        return fooBarQixBuffer.toString();\n    }\n\n    protected String substitutedWhenDivideSpecialNumbers() {\n        StringBuilder foobarQixBuffer = new StringBuilder();\n        for (Map.Entry&lt;Integer, String&gt; substitution : ORDERED_SUBSTITTIONS.entrySet()) {\n            if (fooBarQixNumber % substitution.getKey() == 0) {\n                shouldBeFooBarQixed = true;\n                foobarQixBuffer.append(substitution.getValue());\n            }\n        }\n        return foobarQixBuffer.toString();\n    }\n\n    protected String substitutedWhenSpecialNumbersOccurs() {\n        if (!HAS_SPECIAL_NUMBERS.matcher(fooBarQixNumber.toString()).matches()) {\n            return "";\n        }\n        return toFooBarQix(abs(fooBarQixNumber));\n    }\n\n    private String toFooBarQix(Integer digit) {\n        if (digit &lt; 10) {\n            final StringBuilder fooBarQixBuffer = new StringBuilder();\n            for (Map.Entry&lt;Integer, String&gt; substitution : ORDERED_SUBSTITTIONS.entrySet()) {\n                if (digit == substitution.getKey()) {\n                    shouldBeFooBarQixed = true;\n                    fooBarQixBuffer.append(substitution.getValue());\n                }\n            }\n            return fooBarQixBuffer.toString();\n        } else {\n            final int padUnit = digit / 10;\n            return toFooBarQix(padUnit) + toFooBarQix(digit - padUnit * 10);\n        }\n    }\n\n}\n</pre>\n        \n    </div>\n    \n    <div class="gist-meta">\n        \n        <span><a href="https://github.com/seblm/FooBarQix/blob/release/src/main/java/fr/free/lemerdy/FooBarQixer.java">This Gist</a> brought to you by <a href="http://gist-it.appspot.com">gist-it</a>.</span>\n        \n        <span style="float: right; color: #369;"><a href="https://github.com/seblm/FooBarQix/raw/release/src/main/java/fr/free/lemerdy/FooBarQixer.java">view raw</a></span>\n        <span style="float: right; margin-right: 8px;">\n            <a style="color: rgb(102, 102, 102);" href="https://github.com/seblm/FooBarQix/blob/release/src/main/java/fr/free/lemerdy/FooBarQixer.java">FooBarQixer.java</a></span>\n            <!-- Generated by: http://gist-it.appspot.com -->\n    </div>\n    \n</div>\n</div>' );

document.write( '<script type="text/javascript">prettyPrint();</script>' );