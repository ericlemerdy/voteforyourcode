if ( 'prettyPrint' in window ) {} else {
    document.write( '<script type="text/javascript" src="http://gist-it.appspot.com/assets/prettify/prettify.js"></script>' );
}


document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/embed.css"/>' );


document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/prettify/prettify.css"/>' );

document.write( '<div class="gist-it-gist">\n<div class="gist-file">\n    <div class="gist-data">\n        \n        <pre class="prettyprint">package fr.ramiere.codestory;\n\nimport static java.lang.Character.forDigit;\n\n/**\n * don\'t panic, this mess is created on purpose :)\n */\npublic class FooBarQixFluentAbuseBuilder {\n    static $when when() {\n        return new $when();\n    }\n\n    static $digitFound digitFound(int i) {\n        return new $digitFound(i);\n    }\n\n    static class $when {\n        $number number() {\n            return new $number();\n        }\n    }\n\n    static class $number {\n        $is is() {\n            return new $is();\n        }\n    }\n\n    static class $is {\n        $divisibleby divisibleBy(int divisiblesBy) {\n            return new $divisibleby(divisiblesBy);\n        }\n\n        $digitFound digitFound(int digitFound) {\n            return new $digitFound(digitFound);\n        }\n    }\n\n    static class $divisibleby {\n        int divisiblesBy;\n\n        $divisibleby(int divisiblesBy) {\n            this.divisiblesBy = divisiblesBy;\n        }\n\n        $then then() {\n            return new $then(this);\n        }\n\n        $or or($digitFound digitFound) {\n            return new $or(this, digitFound);\n        }\n    }\n\n    static class $or {\n        $divisibleby divisibleby;\n        $digitFound digitFound;\n\n        $or($divisibleby divisibleby, $digitFound digitFound) {\n            this.divisibleby = divisibleby;\n            this.digitFound = digitFound;\n        }\n\n        $then then() {\n            return new $then(divisibleby, digitFound);\n        }\n    }\n\n    static class $then {\n        $divisibleby divisibleby;\n        $digitFound digitFound;\n\n        $then($divisibleby divisibleby) {\n            this.divisibleby = divisibleby;\n        }\n\n        $then($divisibleby divisibleby, $digitFound digitFound) {\n            this.divisibleby = divisibleby;\n            this.digitFound = digitFound;\n        }\n\n        Rule write(String val) {\n            return digitFound == null ? new Rule(val, divisibleby.divisiblesBy) : new Rule(val, divisibleby.divisiblesBy, digitFound.digit);\n        }\n    }\n\n    static class $digitFound {\n        int digit;\n\n        $digitFound(int digit) {\n            this.digit = digit;\n        }\n\n        $then then() {\n            return new $then(null);\n        }\n    }\n\n    static public class Rule {\n        private final String val;\n        private final int divisibleBy;\n        private final char digitChar;\n\n        Rule(String val, int divisibleBy) {\n            this.val = val;\n            this.divisibleBy = divisibleBy;\n            this.digitChar = \'\\0\';\n        }\n\n        Rule(String val, int divisibleBy, int digitChar) {\n            this.val = val;\n            this.divisibleBy = divisibleBy;\n            this.digitChar = forDigit(digitChar, 10);\n        }\n\n        String divisible(int number) {\n            return number % divisibleBy == 0 ? val : "";\n        }\n\n        String val() {\n            return val;\n        }\n\n        char digitChar() {\n            return digitChar;\n        }\n    }\n\n    public static class Rules {\n        public static $foreach on(int number) {\n            return new $foreach(number);\n        }\n\n        public static class $foreach {\n            int number;\n            Iterable&lt;Rule&gt; rules;\n\n            public $foreach(int number) {\n                this.number = number;\n            }\n\n            $rules foreach(Iterable&lt;Rule&gt; rules) {\n                this.rules = rules;\n                return new $rules(number, this);\n            }\n        }\n\n        public static class $rules {\n            int number;\n            $foreach foreach;\n\n            $rules(int number, $foreach foreach) {\n                this.number = number;\n                this.foreach = foreach;\n            }\n\n            replacement$ divisibility() {\n                return new replacement$(this);\n            }\n        }\n\n        public static class replacement$ {\n            $rules rules;\n\n            replacement$($rules rules) {\n                this.rules = rules;\n            }\n\n            String convertdigits() {\n                final int val = rules.number;\n                final StringBuilder ret = new StringBuilder();\n                for (Rule rule : rules.foreach.rules) {\n                    ret.append(rule.divisible(val));\n                }\n                final String value = Integer.toString(val);\n                for (int i = 0; i &lt; value.length(); i++) {\n                    ret.append(convertDigit(value.charAt(i)));\n                }\n                return ret.length() == 0 ? value : ret.toString();\n            }\n\n            String convertDigit(char digitChar) {\n                for (Rule rule : rules.foreach.rules) {\n                    if (digitChar == rule.digitChar()) {\n                        return rule.val();\n                    }\n                }\n                return "";\n            }\n        }\n    }\n}\n</pre>\n        \n    </div>\n    \n    <div class="gist-meta">\n        \n        <span><a href="https://github.com/framiere/FooBarQix/blob/master/src/main/java/fr/ramiere/codestory/FooBarQixFluentAbuseBuilder.java">This Gist</a> brought to you by <a href="http://gist-it.appspot.com">gist-it</a>.</span>\n        \n        <span style="float: right; color: #369;"><a href="https://github.com/framiere/FooBarQix/raw/master/src/main/java/fr/ramiere/codestory/FooBarQixFluentAbuseBuilder.java">view raw</a></span>\n        <span style="float: right; margin-right: 8px;">\n            <a style="color: rgb(102, 102, 102);" href="https://github.com/framiere/FooBarQix/blob/master/src/main/java/fr/ramiere/codestory/FooBarQixFluentAbuseBuilder.java">FooBarQixFluentAbuseBuilder.java</a></span>\n            <!-- Generated by: http://gist-it.appspot.com -->\n    </div>\n    \n</div>\n</div>' );

document.write( '<script type="text/javascript">prettyPrint();</script>' );