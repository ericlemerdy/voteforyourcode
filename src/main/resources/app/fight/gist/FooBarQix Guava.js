if ( 'prettyPrint' in window ) {} else {
    document.write( '<script type="text/javascript" src="http://gist-it.appspot.com/assets/prettify/prettify.js"></script>' );
}


document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/embed.css"/>' );


document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/prettify/prettify.css"/>' );

document.write( '<div class="gist-it-gist">\n<div class="gist-file">\n    <div class="gist-data">\n        \n        <pre class="prettyprint">package net.grose.foo;\n\nimport static com.google.common.base.Joiner.on;\nimport static com.google.common.base.Predicates.notNull;\nimport static com.google.common.collect.Collections2.filter;\nimport static com.google.common.collect.Lists.newArrayList;\nimport static com.google.common.collect.Lists.transform;\nimport static com.google.common.collect.Maps.filterKeys;\nimport static java.util.Arrays.asList;\n\nimport java.util.List;\nimport java.util.Map;\n\nimport com.google.common.base.Function;\nimport com.google.common.base.Predicate;\nimport com.google.common.collect.ImmutableSortedMap;\n\npublic class FooBarQix {\n    private static final Map&lt;Integer, String&gt; INT_TO_SYM = ImmutableSortedMap.of(3, "Foo", \n                                                                                 5, "Bar",\n                                                                                 7, "Qix");\n    \n    public static String eval(final Integer i) {\n        List&lt;String&gt; symbols = newArrayList();\n        \n        symbols.addAll(filterKeys(INT_TO_SYM, divisorOf(i)).values());\n        symbols.addAll(filter(transform(lettersOf(i), TO_SYMBOL), notNull()));\n        \n        return symbols.isEmpty() ? String.valueOf(i) : on("").join(symbols);\n    }\n\n    private static Predicate&lt;Integer&gt; divisorOf(final Integer i) {\n        return new Predicate&lt;Integer&gt;() {\n            @Override public boolean apply(Integer input) {\n                return i % input == 0;\n            }\n        };\n    }\n\n    private static List&lt;String&gt; lettersOf(final Integer i) {\n        return asList(String.valueOf(i).split("", 1));\n    }\n\n    private static Function&lt;String, String&gt; TO_SYMBOL = new Function&lt;String, String&gt;() {\n        @Override public String apply(String input) {\n            return INT_TO_SYM.get(Integer.valueOf(input));\n        }\n    };\n    \n    public static void main(String[] args) {\n        for (int i = 1; i &lt; 100; i++) {\n            System.out.println(eval(i));\n        }\n    }\n}\n</pre>\n        \n    </div>\n    \n    <div class="gist-meta">\n        \n        <span><a href="https://github.com/guillaumerose/FooBarQix/blob/master/java/src/main/java/net/grose/foo/FooBarQix.java">This Gist</a> brought to you by <a href="http://gist-it.appspot.com">gist-it</a>.</span>\n        \n        <span style="float: right; color: #369;"><a href="https://github.com/guillaumerose/FooBarQix/raw/master/java/src/main/java/net/grose/foo/FooBarQix.java">view raw</a></span>\n        <span style="float: right; margin-right: 8px;">\n            <a style="color: rgb(102, 102, 102);" href="https://github.com/guillaumerose/FooBarQix/blob/master/java/src/main/java/net/grose/foo/FooBarQix.java">FooBarQix.java</a></span>\n            <!-- Generated by: http://gist-it.appspot.com -->\n    </div>\n    \n</div>\n</div>' );

document.write( '<script type="text/javascript">prettyPrint();</script>' );