if ( 'prettyPrint' in window ) {} else {
    document.write( '<script type="text/javascript" src="http://gist-it.appspot.com/assets/prettify/prettify.js"></script>' );
}


document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/embed.css"/>' );


document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/prettify/prettify.css"/>' );

document.write( '<div class="gist-it-gist">\n<div class="gist-file">\n    <div class="gist-data">\n        \n        <pre class="prettyprint">/*\n *\n */\npackage org.diveintojee.foobarquix;\n\nimport java.util.Map;\nimport java.util.TreeMap;\n\nimport org.apache.commons.lang3.StringUtils;\n\n/**\n * @author louis.gueye@gmail.com\n */\npublic class FooBarQix {\n\n    public static void main(final String[] args) {\n\n        for (int index = 1; index &lt; 101; index++) {\n\n            System.out.println(new FooBarQix(index));\n\n        }\n\n    }\n\n    private final int input;\n\n    private final StringBuilder output = new StringBuilder();\n\n    private static Map&lt;Integer, String&gt; encodings;\n\n    static {\n\n        encodings = new TreeMap&lt;Integer, String&gt;();\n\n        encodings.put(3, "Foo");\n\n        encodings.put(5, "Bar");\n\n        encodings.put(7, "Qix");\n\n    }\n\n    /**\n     * @param i\n     */\n    public FooBarQix(final int i) {\n        input = i;\n    }\n\n    /**\n     * @return\n     */\n    public FooBarQix applyContainsRule() {\n\n        if (!checkPreconditions())\n            return this;\n\n        final String inputAsString = String.valueOf(input);\n\n        for (int i = 0; i &lt; inputAsString.length(); i++) {\n\n            final char digit = inputAsString.charAt(i);\n\n            final String digitAsString = String.valueOf(digit);\n\n            final Integer key = Integer.valueOf(digitAsString);\n\n            if (encodings.keySet().contains(key)) {\n\n                output.append(encodings.get(key));\n\n            }\n\n        }\n\n        return this;\n\n    }\n\n    /**\n     * @return\n     */\n    public FooBarQix applyDivisibleRule() {\n\n        if (!checkPreconditions())\n            return this;\n\n        for (final Integer key : encodings.keySet()) {\n\n            if (input % key == 0) {\n\n                output.append(encodings.get(key));\n\n            }\n\n        }\n\n        return this;\n    }\n\n    /**\n     * @return\n     */\n    public String build() {\n\n        if (StringUtils.isEmpty(output.toString()))\n            return String.valueOf(input);\n\n        return output.toString();\n\n    }\n\n    private boolean checkPreconditions() {\n\n        if (input &lt; 1 || input &gt; 100)\n            return false;\n\n        return true;\n\n    }\n\n    /**\n     * @see java.lang.Object#toString()\n     */\n    @Override\n    public String toString() {\n\n        return applyDivisibleRule().applyContainsRule().build();\n\n    }\n}\n</pre>\n        \n    </div>\n    \n    <div class="gist-meta">\n        \n        <span><a href="https://github.com/lgueye/foobarqix/blob/master/src/main/java/org/diveintojee/foobarquix/FooBarQix.java">This Gist</a> brought to you by <a href="http://gist-it.appspot.com">gist-it</a>.</span>\n        \n        <span style="float: right; color: #369;"><a href="https://github.com/lgueye/foobarqix/raw/master/src/main/java/org/diveintojee/foobarquix/FooBarQix.java">view raw</a></span>\n        <span style="float: right; margin-right: 8px;">\n            <a style="color: rgb(102, 102, 102);" href="https://github.com/lgueye/foobarqix/blob/master/src/main/java/org/diveintojee/foobarquix/FooBarQix.java">FooBarQix.java</a></span>\n            <!-- Generated by: http://gist-it.appspot.com -->\n    </div>\n    \n</div>\n</div>' );

document.write( '<script type="text/javascript">prettyPrint();</script>' );