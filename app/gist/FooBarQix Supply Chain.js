if ( 'prettyPrint' in window ) {} else {
    document.write( '<script type="text/javascript" src="http://gist-it.appspot.com/assets/prettify/prettify.js"></script>' );
}


document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/embed.css"/>' );


document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/prettify/prettify.css"/>' );

document.write( '<div class="gist-it-gist">\n<div class="gist-file">\n    <div class="gist-data">\n        \n        <pre class="prettyprint">public class FooBarQix {\r\n\r\n\r\n\t/*               -------------------------------\r\n\t *               |   TRAVAIL A LA CHAINE....   |\r\n\t *               -------------------------------  \r\n\t *  \r\n\t *  Pour plus de fun, (sauf pour la boucle generale)\r\n\t *  aucun int (surtout pas pour la test de multiplicite)\r\n\t *  aucun test\r\n\t *  aucune boucle\r\n\t *  uniquement des operations sur des String\r\n\t *  et des Regex.\r\n\t *  \r\n\t *  A l\'interieur de la boucle tout peut tenir sur une seule ligne\r\n\t *  mais je vais vous epargner cette epreuve occulaire...\r\n\t *  \r\n\t *  Enjoy !                                                  O\r\n\t *                                                           |\r\n\t *         O                                                 |------\r\n\t *         |                                    -------\r\n\t *  -------|                                    | Qix |\r\n\t *  |      |                                    -------\r\n\t *  |              -------     -------       o o o o o o o o o o o o\r\n\t *  |              | Foo |     | Bar |      o ----------------------\r\n\t *  |              -------     -------     o/\r\n\t *  o o o o o o o o o o o o o o o o o o o o/\r\n\t *  --------------------------------------   Travail a la chaine ....\r\n\t *    \r\n\t */\r\n\t\r\n\t/**\r\n\t * La methode qui va bien sans parametre\r\n\t * @param args\r\n\t */\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n\t\t// La fameuse boucle, seul endroit ou je m\'autorise l\'usage d\'un int.\r\n\t\tfor (int i=1; i&lt;=100; i++) {\r\n\r\n\t\t\t// C\'est plus drole avec des chaines !\r\n\t\t\tString value = String.valueOf(i);\r\n\t\t\r\n\t\t\t// Test de la multiplicite\r\n\t\t\tString \tresult = isMultiple(value, "...", "Foo") +\r\n\t\t\t\t\t\t\t isMultiple(value, ".....", "Bar") +\r\n\t\t\t\t\t\t\t isMultiple(value, ".......", "Qix");\r\n\t\t\t\r\n\t\t\t// Test de la contenance\r\n\t\t\tresult +=\t\t value.replaceAll("3", "Foo").replaceAll("5", "Bar").replaceAll("7", "Qix");\r\n\t\t\t\r\n\t\t\t// Nettoyage...\r\n\t\t\tresult = result.replaceAll("[0-9]", "").replaceAll("$^", value);\r\n\t\t\t\r\n\t\t\t// Affichage\r\n\t\t\tSystem.out.println(result);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Fonction de test de la multiplicite avec des chaines et gestion du Foo,Bar,Qix\r\n\t * @param valueInString\r\n\t * @param divisor\r\n\t * @param keyWord\r\n\t * @return theResultInString\r\n\t */\r\n\tprivate static String isMultiple(String valueInString, String divisor, String keyWord) {\r\n\t\t// Ma ligne preferee...\r\n\t\treturn String.format("%0"+valueInString+"d", 0).replaceAll(divisor, "").replaceAll("$^", keyWord).replaceAll("^(?!"+keyWord+").*$", valueInString);\r\n\t}\r\n\t\r\n}\r\n</pre>\n        \n    </div>\n    \n    <div class="gist-meta">\n        \n        <span><a href="https://github.com/GTORDO/FooBarQix/blob/master/FooBarQix.java">This Gist</a> brought to you by <a href="http://gist-it.appspot.com">gist-it</a>.</span>\n        \n        <span style="float: right; color: #369;"><a href="https://github.com/GTORDO/FooBarQix/raw/master/FooBarQix.java">view raw</a></span>\n        <span style="float: right; margin-right: 8px;">\n            <a style="color: rgb(102, 102, 102);" href="https://github.com/GTORDO/FooBarQix/blob/master/FooBarQix.java">FooBarQix.java</a></span>\n            <!-- Generated by: http://gist-it.appspot.com -->\n    </div>\n    \n</div>\n</div>' );

document.write( '<script type="text/javascript">prettyPrint();</script>' );